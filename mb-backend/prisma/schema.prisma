// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int             @default(autoincrement()) @id
  email          String          @unique
  name           String?
  password       String
  posts          Post[]
  avatar         Media?          @relation("attachment", fields: [avatarId], references: [id])
  avatarId       Int?
  refresh_token  RefreshToken?   @relation("token")
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())           @updatedAt
}

model Post {
  id              Int      @default(autoincrement()) @id
  title           String
  content         String
  published       Boolean? @default(false)
  author          User?    @relation(fields: [authorId], references: [id])
  authorId        Int?
  attachments     Media[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())           @updatedAt
}

model Media {
  id             Int      @default(autoincrement()) @id
  attachementId  User?    @relation("attachment")
  post           Post?    @relation(fields: [postId], references: [id])
  postId         Int?
  file           File     @relation("fileType", fields: [fileId], references: [id])
  fileId         Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())          @updatedAt
}

model File {
  id          Int      @default(autoincrement()) @id
  filename    String
  mimetype    String
  encoding    String
  path        String
  media       Media?   @relation("fileType")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())           @updatedAt
}

model RefreshToken {
  id          Int     @default(autoincrement()) @id
  user        User    @relation("token", fields: [userId], references: [id])
  userId      Int
  is_revoked  Boolean
  expires     DateTime?
}